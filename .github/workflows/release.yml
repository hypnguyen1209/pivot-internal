name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'
    
    - name: Verify dependencies
      run: go mod verify
    
    - name: Run tests
      run: go test -v ./...
    
    - name: Create build directory
      run: mkdir -p build
    
    - name: Build for Windows (amd64)
      env:
        GOOS: windows
        GOARCH: amd64
      run: go build -a -installsuffix cgo -ldflags="-s -w" -o build/pivot-internal-windows-amd64.exe
    
    - name: Build for Windows (386)
      env:
        GOOS: windows
        GOARCH: 386
      run: go build -a -installsuffix cgo -ldflags="-s -w" -o build/pivot-internal-windows-386.exe
    
    - name: Build for macOS (amd64)
      env:
        GOOS: darwin
        GOARCH: amd64
        CGO_ENABLED: 0
      run: go build -a -installsuffix cgo -ldflags="-s -w -extldflags=-static" -o build/pivot-internal-darwin-amd64
    
    - name: Build for macOS (arm64)
      env:
        GOOS: darwin
        GOARCH: arm64
        CGO_ENABLED: 0
      run: go build -a -installsuffix cgo -ldflags="-s -w -extldflags=-static" -o build/pivot-internal-darwin-arm64
    
    - name: Build for Linux (amd64)
      env:
        GOOS: linux
        GOARCH: amd64
        CGO_ENABLED: 0
      run: go build -a -installsuffix cgo -ldflags="-s -w -extldflags=-static" -o build/pivot-internal-linux-amd64
    
    - name: Build for Linux (arm64)
      env:
        GOOS: linux
        GOARCH: arm64
        CGO_ENABLED: 0
      run: go build -a -installsuffix cgo -ldflags="-s -w -extldflags=-static" -o build/pivot-internal-linux-arm64
    
    - name: Generate checksums
      run: |
        cd build
        sha256sum * > checksums.txt
        cat checksums.txt
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        name: Release ${{ github.ref_name }}
        body: |
          ## Pivot Internal Tool Release
          
          ### Features
          - **Dual Architecture Support**: Traditional direct connection + New agent-based reverse connection
          - SOCKS5 proxy with RC4 encryption throughout entire chain
          - **Agent Server**: Central relay for victim-to-multiple-clients scenarios
          - **Reverse Connection Capability**: Victim connects outbound only (no listening ports)
          - Multiple concurrent clients support
          - Cross-platform compatibility
          - Connection tracking and logging with unique IDs
          - Graceful shutdown handling with signal support
          - IPv4, IPv6, and domain name resolution
          
          ### Architecture Options
          
          #### Traditional Mode (Direct Connection)
          Client → Server (victim listens for direct connections)
          
          #### Agent Mode (Reverse Connection) ⭐ NEW
          Client → Agent → Victim (victim connects out to agent, no listening ports)
          
          ### Binaries
          This release includes binaries for:
          - **Windows**: amd64, 386
          - **macOS**: amd64 (Intel), arm64 (Apple Silicon)
          - **Linux**: amd64, arm64
          
          ### Usage Examples
          
          #### Traditional Mode
          ```bash
          # Server (victim network)
          ./pivot-internal server -key secret123 -l :1080
          
          # Client (your machine)
          ./pivot-internal client -key secret123 -r victim-ip:1080 -l :1081
          ```
          
          #### Agent Mode (NEW - Recommended for restrictive networks)
          ```bash
          # 1. Agent (public server)
          ./pivot-internal agent -key secret123 -l :1080 -i :8000
          
          # 2. Victim (internal network - connects OUT only)
          ./pivot-internal server -key secret123 -c agent-ip:8000
          
          # 3. Client(s) (your machines)
          ./pivot-internal client -key secret123 -r agent-ip:1080 -l :1081
          ./pivot-internal client -key secret123 -r agent-ip:1080 -l :1082
          ```
          
          #### Test Connection
          ```bash
          # Test through SOCKS5 proxy
          curl -x socks5h://127.0.0.1:1081 https://1.1.1.1/cdn-cgi/trace
          ```
          
          ### When to Use Each Architecture
          
          **Use Traditional Mode when:**
          - Direct network access to internal network
          - Internal network allows inbound connections
          - Simple setup preferred
          
          **Use Agent Mode when:**
          - Internal network has strict inbound filtering
          - Victim can only make outbound connections
          - Need centralized management of multiple clients
          - Enhanced stealth required (no listening ports on victim)
          
          ### Security Notes
          - All traffic encrypted with RC4
          - Use strong encryption keys (avoid default examples)
          - For authorized penetration testing only
          - Verify checksums before use
          - Agent mode provides better stealth (victim opens no listening ports)
          
          See the [README](https://github.com/${{ github.repository }}/blob/main/README.md) for detailed usage instructions and architecture diagrams.
        files: |
          build/pivot-internal-windows-amd64.exe
          build/pivot-internal-windows-386.exe
          build/pivot-internal-darwin-amd64
          build/pivot-internal-darwin-arm64
          build/pivot-internal-linux-amd64
          build/pivot-internal-linux-arm64
          build/checksums.txt
        draft: false
        prerelease: false
