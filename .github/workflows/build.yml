name: Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'
    
    - name: Verify dependencies
      run: go mod verify
    
    - name: Run tests
      run: go test -v ./...
    
    - name: Run vet
      run: go vet ./...

  build:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64
        include:
          - goos: windows
            goarch: 386
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'
    
    - name: Build binary
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
        CGO_ENABLED: 0
      run: |
        mkdir -p build
        if [ "$GOOS" = "windows" ]; then
          if [ "$GOARCH" = "386" ]; then
            go build -a -installsuffix cgo -ldflags="-s -w" -o build/pivot-internal_${GOARCH}.exe
          else
            go build -a -installsuffix cgo -ldflags="-s -w" -o build/pivot-internal.exe
          fi
        elif [ "$GOOS" = "darwin" ]; then
          go build -a -installsuffix cgo -ldflags="-s -w -extldflags=-static" -o build/pivot-internal_${GOARCH}_darwin
        else
          go build -a -installsuffix cgo -ldflags="-s -w -extldflags=-static" -o build/pivot-internal_${GOARCH}
        fi
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: pivot-internal-${{ matrix.goos }}-${{ matrix.goarch }}
        path: build/
        retention-days: 7
